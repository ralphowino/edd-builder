{"version":3,"file":null,"sources":["../../edd-io/components/inquirer.js","../../edd-io/components/transformers.js","../../edd-io/components/fields.js","../../edd-io/components/input.js","../../edd-io/components/output.js","../../edd-fs/components/writer.js","../../edd-fs/components/reader.js","../../edd-fs/components/loader.js","../../edd-fs/components/manager.js","../../edd-fs/components/filesystem.js","../../edd-fs/commands/init.js","../../edd-fs/components/copy.js","../../edd-fs/commands/read.js","../../edd-fs/commands/write.js","../components/install.js","../commands/install.js","../lib/loader.js","../lib/builder.js","../commands/generate.js","../index.js"],"sourcesContent":["var inquirer = require('inquirer');\r\n\r\nclass ClassInquirer {\r\n    loopQuestions(questions_array, index, answers) {\r\n        if (!index) {\r\n            index = 0;\r\n        }\r\n\r\n        if (!answers) {\r\n            answers = {}\r\n        }\r\n\r\n        return inquirer.prompt(questions_array[index]).then(function (answer) {\r\n            Object.assign(answers, answer);\r\n\r\n            if (index === questions_array.length - 1) {\r\n                return answers;\r\n            } else {\r\n                return this.loopQuestions(questions_array, index + 1, answers)\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Modified version of inquirer prompt function\r\n     * @param questions_array\r\n     * @returns {Promise<T>|Promise}\r\n     */\r\n    prompt(questions_array) {\r\n        return new Promise(function (resolve) {\r\n            return resolve(this.loopQuestions(questions_array));\r\n        });\r\n    }\r\n}\r\nexport let Inquirer = new ClassInquirer();","var _ = require('lodash');\r\n\r\nclass ClassTransformers {\r\n\r\n    transformArrayField(field) {\r\n        // return input.choose(field.title + '. What do we do next', [\r\n        // \t{\tvalue: 'add',  name: 'Add'},\r\n        // \t{\tvalue: 'stop', name: 'Stop'}\r\n        // ]).then(function ( selected ) {\r\n        // \tif (selected == 'stop')\r\n        // \t\treturn answers;\r\n        // \tvar items = _.map(field.items, function (item) {\r\n        // \t\treturn item.replace(field.key.concat('[].'), '');\r\n        // \t});\r\n        // \treturn input.fields(field.schema.items, items).then(function (answer) {\r\n        // \t\tanswers.push(answer);\r\n        // \t\treturn input.askArrayQuestion(field, answers)\r\n        // \t})\r\n        // });\r\n    }\r\n\r\n    transformBooleanField(field) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'confirm'\r\n        }\r\n    }\r\n\r\n// transformCheckboxField(field) {\r\n// \treturn {\r\n// \t\tname: field.key,\r\n// \t\tmessage: field.title ? field.title : field.key,\r\n// \t\tchoices: choices,\r\n// \t\tdefault: _default\r\n// \t}\r\n// }\r\n\r\n    transformDefaultField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n\r\n    transformHelpField(field, answer) {\r\n        console.log('no transform available for help text');\r\n        return null;\r\n    }\r\n\r\n    transformIntegerField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformNumberField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformStringField(field, answer) {\r\n        var question = transformers.transformDefaultField(field, answer);\r\n\r\n        if (field.enum) {\r\n            var choices = _.map(field.enum, function (item) {\r\n                return {value: item, name: item};\r\n            });\r\n            question.type = 'rawlist';\r\n            question.choices = choices;\r\n        }\r\n        return question;\r\n    }\r\n\r\n    transformSubmitField(field, answer) {\r\n        console.log('no transform available for submit buttons');\r\n        return null;\r\n    }\r\n\r\n    transformTextareaField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n}\r\nexport let Transformers = new ClassTransformers();","var _ = require('lodash');\r\n\r\nimport {Inquirer} from './inquirer';\r\nimport {Transformers} from './transformers';\r\n\r\nclass ClassFields {\r\n    askQuestions(form, default_model) {\r\n        var questions = this.getQuestions(form, default_model);\r\n        return Inquirer.prompt(questions);\r\n    }\r\n\r\n    getArrayFields(schema, parent_field) {\r\n        var array_form = [];\r\n        var array_schema = _.cloneDeep(_.get(schema, ['properties', parent_field.key]));\r\n        _.forEach(parent_field.items, function (item_field) {\r\n            if (_.isString(item_field)) {\r\n                item_field = {key: item_field};\r\n            }\r\n            item_field.key = item_field.key.replace(parent_field.key + '[].', ''); // Remove the array key prefix\r\n            array_form.push(this.getNormalField(array_schema, item_field))\r\n        });\r\n        return array_form;\r\n    }\r\n\r\n    getAsteriskFields(schema, schema_form) {\r\n        var fields = _.cloneDeep(_.get(schema, ['properties']));\r\n        _.forEach(fields, function (object, field) {\r\n            field = {key: field};\r\n            schema_form.push(this.getNormalField(schema, field));\r\n        });\r\n        return schema_form;\r\n    }\r\n\r\n    getNormalField(schema, field) {\r\n        var field_schema = _.cloneDeep(_.get(schema, ['properties', field.key]));\r\n        if (_.isUndefined(field_schema))\r\n            field_schema = _.cloneDeep(_.get(schema.items, ['properties', field.key])); //check for array\r\n\r\n        field = _.merge(field_schema, _.get(field, ['schema', 'x-schema-form'], {}), field);\r\n\r\n        if (field.type === 'array') {\r\n            field = this.getArrayFields(schema, field); // Make the field an array of the objects properties\r\n        }\r\n\r\n        return field;\r\n    }\r\n\r\n    getQuestions(array_fields, default_model) {\r\n        var type, questions = [];\r\n        _.forEach(array_fields, function (field) {\r\n            \"use strict\";\r\n            var question;\r\n\r\n            if (_.isArray(field)) {\r\n                question = this.getQuestions(field, default_model);\r\n            } else {\r\n                type = 'transform' + _.capitalize(field.type) + 'Field';\r\n                if (!Transformers[type]) {\r\n                    console.error(type);\r\n                    type = 'transformDefaultField';\r\n                }\r\n                question = Transformers[type](field, _.get(default_model, field.key));\r\n            }\r\n\r\n            if (question != null) {\r\n                return questions.push(question);\r\n            }\r\n        });\r\n        return questions;\r\n    }\r\n\r\n    queries(schema, form, model) {\r\n        var schema_form = [];\r\n\r\n        _.forEach(form, function (field) {\r\n            if (_.isString(field)) {\r\n                field = {key: field};\r\n            }\r\n\r\n            if (field.key !== '*') { // normal fields\r\n                schema_form.push(this.getNormalField(schema, field));\r\n            } else if (field.key === '*') { // dynamic form indicated by asterisk to indicate all fields\r\n                this.getAsteriskFields(schema, schema_form);\r\n            }\r\n        });\r\n        return this.askQuestions(schema_form, model)\r\n    }\r\n}\r\nexport let Fields = new ClassFields();","var inquirer = require('inquirer');\r\n\r\nclass ClassInput {\r\n    ask(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'input',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    secret(message, _default) {\r\n        console.log(message);\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'password',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    confirm(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'confirm',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choose(message, choices, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choice(question, choices, selected) {\r\n        \"use strict\";\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: question,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: selected\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n}\r\nexport let Input = new ClassInput();","var\r\n  chalk = require('chalk'),\r\n  Spinner = require('cli-spinner').Spinner,\r\n  _ = require('lodash');\r\n\r\nclass ClassOutput {\r\n  line() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.log(message);\r\n    });\r\n  }\r\n\r\n  info() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.cyan(message));\r\n    });\r\n  }\r\n\r\n  success() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.green(message));\r\n    });\r\n  }\r\n\r\n  error() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.error(chalk.white.bgRed(message));\r\n    });\r\n  }\r\n\r\n  warning() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.warn(chalk.yellow(message));\r\n    })\r\n  }\r\n\r\n  spinner(message) {\r\n    let spinner = new Spinner(message + '...%s');\r\n    spinner.setSpinnerString('|/-\\\\');\r\n    return spinner;\r\n  }\r\n}\r\nexport let Output = new ClassOutput();","var\r\n    _ = require('lodash'),\r\n    q = require('q'),\r\n    inquirer = require('inquirer'),\r\n    path = require('path'),\r\n    fs = require('fs-plus');\r\n\r\nclass ClassWriter {\r\n\r\n    writeFile(file_path, content) {\r\n        var defered = q.defer();\r\n        var dir = path.dirname(file_path);\r\n        if (!fs.existsSync(dir)) {\r\n            fs.makeTreeSync(dir);\r\n        }\r\n\r\n        if (_.isObject(content) || _.isArray(content)) {\r\n            content = JSON.stringify(content)\r\n        }\r\n        fs.writeFile(file_path, content, function (err) {\r\n            if (err) {\r\n                return defered.reject(new Error(err));\r\n            }\r\n            defered.fulfill(file_path);\r\n        });\r\n        return defered.promise;\r\n    }\r\n\r\n    askToOverwrite() {\r\n        var question = {\r\n            type: \"confirm\",\r\n            name: \"overwrite\",\r\n            message: \"The file already exists, do you want to overwrite it?\",\r\n            default: false\r\n        };\r\n        return inquirer.prompt([question]);\r\n    };\r\n\r\n    write(path, content) {\r\n        if (!fs.existsSync(path)) {\r\n            return this.writeFile(path, content);\r\n        }\r\n\r\n        return this.askToOverwrite().then(function (response) {\r\n            if (response.overwrite) {\r\n                return this.writeFile(path, content);\r\n            }\r\n            return q.reject('File already exists');\r\n        });\r\n    }\r\n\r\n    mkdir(path) {\r\n        var deferred = q.defer();\r\n        fs.makeTree(path, function (err) {\r\n            if (err) {\r\n                return deferred.reject(err);\r\n            }\r\n            return deferred.fulfill();\r\n        });\r\n        return deferred.promise;\r\n    }\r\n}\r\nexport let Writer = new ClassWriter();","let fs = require('fs-plus'),\r\n    path = require('path'),\r\n    q = require('q'),\r\n    yaml = require('js-yaml'),\r\n    _ = require('lodash');\r\n\r\nclass ClassReader {\r\n\r\n  constructor() {\r\n    this.types = {\r\n      json: {\r\n        extensions: ['json'],\r\n        parser: 'parseJson'\r\n      },\r\n      yaml: {\r\n        extensions: ['yaml', 'yml'],\r\n        parser: 'parseYaml'\r\n      }\r\n    };\r\n  }\r\n\r\n  resolveFileType(fileName) {\r\n    let ext = path.extname(fileName).substr(1);\r\n    let type = _.findIndex(this.types, (type)=> {\r\n      return _.findIndex(type.extensions, ext) != -1;\r\n    });\r\n    return type != -1 ? type : ext;\r\n  }\r\n\r\n  parseYaml(data) {\r\n    return yaml.load(data);\r\n  }\r\n\r\n  parseJson(data) {\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  read(path) {\r\n    let type = this.resolveFileType(path);\r\n    let defered = q.defer();\r\n    fs.readFile(path, (err, content) => {\r\n      let data = content.toString();\r\n      if (err) {\r\n        return defered.reject(new Error(err));\r\n      }\r\n      if (this.types[type]['parser']) {\r\n        return defered.resolve(this[this.types[type]['parser']](data));\r\n      }\r\n      return defered.resolve(data);\r\n    });\r\n    return defered.promise;\r\n  }\r\n\r\n  readSync(path) {\r\n    let type = this.resolveFileType(path);\r\n    let data = fs.readFileSync(path);\r\n    data = data.toString();\r\n    if (_.has(this.types, [type, 'parser'])) {\r\n      this[_.get(this.types, [type, 'parser'])](data);\r\n    }\r\n    return data;\r\n  }\r\n}\r\nexport let Reader = new ClassReader();","var q = require('q');\r\nvar _ = require('lodash');\r\nvar fs = require('fs-plus');\r\n\r\nimport {Reader} from './reader';\r\n\r\nclass ClassLoader {\r\n    constructor() {\r\n        this.types = ['json', 'yaml', 'yml'];\r\n        this.globalFolder = fs.getHomeDirectory() + '/.edd/';\r\n    }\r\n\r\n    /**\r\n     * Load a file given the file's path\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    loadFile(path) {\r\n        return this.getRealPath(path).then((response)=> {\r\n            return this.readFile(response.path).then((content)=> {\r\n                response.content = content;\r\n                return response\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load a file given the file's path\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    loadFileSync(path) {\r\n        return this.getRealPath(path).then((response)=> {\r\n            return this.readFile(response.path).then((content)=> {\r\n                response.content = content;\r\n                return response\r\n            });\r\n        });\r\n    }\r\n\r\n    readFile(path) {\r\n        if (fs.existsSync(path)) {\r\n            return Reader.read(path);\r\n        }\r\n        return q.reject(new Error('File does not exist'));\r\n    }\r\n\r\n    /**\r\n     * Get the real path to the file specified\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    getRealPath(path) {\r\n        // Check if path is absolute and return the absolute path\r\n        if (fs.isAbsolute(path)) {\r\n            return q.resolve({\r\n                type: 'absolute',\r\n                path: path\r\n            });\r\n        }\r\n\r\n        // Check and if exists return the local path\r\n        let localFolder = this.getLocalFolder();\r\n\r\n        if (localFolder) {\r\n            let localFilePath = this.fileExists(localFolder + '/' + path, this.types);\r\n\r\n            if (localFilePath) {\r\n                return q.resolve({\r\n                    type: 'local',\r\n                    path: fs.absolute(localFilePath)\r\n                });\r\n            }\r\n        }\r\n\r\n        let globalFilePath = this.fileExists(this.globalFolder + '/' + path, this.types);\r\n\r\n        if (globalFilePath) {\r\n            return q.resolve({\r\n                type: 'local',\r\n                path: globalFilePath\r\n            });\r\n        }\r\n\r\n        return q.reject(new Error('File not found'));\r\n    }\r\n\r\n    /**\r\n     * Check if file exists and returns the path\r\n     *\r\n     * @param path\r\n     * @param possibleExtensions\r\n     * @returns {*}\r\n     */\r\n    fileExists(path, possibleExtensions) {\r\n        if (fs.existsSync(path)) {\r\n            return path;\r\n        }\r\n\r\n        if (!_.isUndefined(possibleExtensions)) {\r\n            for (var i = 0; i < possibleExtensions.length; i++) {\r\n                if (this.fileExists(path + '.' + possibleExtensions[i])) {\r\n                    return path + '.' + possibleExtensions[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get the local .edd folder\r\n     *\r\n     * @param targetFile\r\n     * @param startingPoint\r\n     * @param levels\r\n     * @returns {*}\r\n     */\r\n    getLocalFolder(targetFile, startingPoint, levels) {\r\n        if (!targetFile) {\r\n            targetFile = '.edd'\r\n        }\r\n\r\n        if (!startingPoint) {\r\n            startingPoint = './';\r\n        }\r\n\r\n        if (!levels) {\r\n            levels = fs.absolute(startingPoint).split('/').length;\r\n\r\n            //Checks if a windows machines\r\n            if (levels == 1) {\r\n                levels = fs.absolute(startingPoint).split('\\\\').length;\r\n            }\r\n        }\r\n\r\n        if (fs.existsSync((startingPoint + '/' + targetFile))) {\r\n            return (startingPoint + '/' + targetFile).replace('//', '/');\r\n        }\r\n\r\n        if ((levels - 1) != 0) {\r\n            return this.getLocalFolder(targetFile, startingPoint + '../', (levels - 1));\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport let Loader = new ClassLoader();\r\n\r\n","var q = require('q');\r\n\r\nimport {Output} from '../../edd-io/index';\r\nimport {Writer} from './writer';\r\n\r\nclass ClassManager {\r\n    constructor() {\r\n        this.basePath = process.cwd() + '/';\r\n        this.eddiePath = this.basePath.concat('.edd/');\r\n        this.eddieFile = this.eddiePath.concat('edd-config.json');\r\n    }\r\n\r\n    init() {\r\n        Output.info('initializing');\r\n        var config = {version: '0.0.1'};\r\n\r\n        return Writer\r\n            .write(this.eddieFile, JSON.stringify(config))\r\n            .then((file)=> {\r\n                    let process = [];\r\n                    Output.success('edd successfully initialized at' + file);\r\n\r\n                    process.push(Writer.mkdir(this.eddiePath.concat('libraries')).then(()=> {\r\n                        Output.success('Created libraries folder')\r\n                    }, ()=> {\r\n                        console.log(arguments)\r\n                    }));\r\n                    process.push(Writer.mkdir(this.eddiePath.concat('templates')));\r\n\r\n                    return q.all(process);\r\n                },\r\n                (err) => {\r\n                    Output.error(err);\r\n                });\r\n    }\r\n}\r\nexport let Manager = new ClassManager();","var q = require('q');\r\nvar fs = require('fs-plus');\r\nimport {Reader} from './reader';\r\nimport {Writer} from './writer';\r\n\r\nclass ClassFileSystem {\r\n\r\n    constructor() {\r\n        this.globalFolder = fs.getHomeDirectory() + '/.edd/';\r\n    }\r\n\r\n    /**\r\n     * Checks for the file and reads the content of the file if the file is present\r\n     *\r\n     * @param path\r\n     * @param content\r\n     * @returns {*}\r\n     */\r\n    writeToLocalFile(path, content) {\r\n        var deferred = q.defer();\r\n\r\n        Writer.write(this.getLocalFolder() + '/' + path, content).then( () => {\r\n            return deferred.resolve('Successfully wrote to the file');\r\n        },  (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Checks for the file and reads the content of the file if the file is present\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readFile(path) {\r\n        var deferred = q.defer();\r\n\r\n        fs.exists(path, () => {\r\n            Reader.read(path).then( (response) => {\r\n                return deferred.resolve(response);\r\n            },  (err) => {\r\n                return deferred.reject(err);\r\n            });\r\n        }, () => {\r\n            return deferred.reject(new Error('File does not exist'));\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * Recursively searches up the file system for a file\r\n     *\r\n     * @param targetFile\r\n     * @param startingPoint\r\n     * @param levels\r\n     * @returns {*} relativeFilePath\r\n     */\r\n    getLocalFolder(targetFile, startingPoint, levels) {\r\n\r\n        if(!targetFile) {\r\n            targetFile = '.edd';\r\n        }\r\n\r\n        if(!startingPoint) {\r\n            startingPoint = './';\r\n        }\r\n\r\n        if(!levels) {\r\n            levels = FileSystem.fetchDirectoryLevels(startingPoint);\r\n        }\r\n\r\n        if (fs.existsSync((startingPoint + '/' + targetFile))) {\r\n            return (startingPoint + '/' + targetFile).replace('//', '/');\r\n        }\r\n\r\n        if ((levels - 1) != 0) {\r\n            return this.getLocalFolder(targetFile, startingPoint + '../', (levels - 1));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Fetches the levels the current directory is compared to the base directory\r\n     *\r\n     * @param {String} startingPoint\r\n     * @returns {Number} directoryLevels\r\n     */\r\n    static fetchDirectoryLevels(startingPoint) {\r\n        let absolute = fs.absolute(startingPoint);\r\n        let levels = absolute.split('/').length;\r\n\r\n        //Checks if a windows machines\r\n        if (levels == 1) {\r\n            levels = absolute.split('\\\\').length;\r\n        }\r\n\r\n        return levels;\r\n    }\r\n\r\n    /**\r\n     * Checks if the local .edd folder exists\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    localDirectoryExists() {\r\n        return Boolean(this.getLocalFolder());\r\n    }\r\n\r\n\r\n    /**\r\n     * Reads a file from the local .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readLocalFile(path) {\r\n        return this.readFile(this.getLocalFolder() + '/' + path);\r\n    }\r\n\r\n    /**\r\n     * Reads a file from the global .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readGlobalFile(path) {\r\n        return this.readFile(this.globalFolder + path);\r\n    }\r\n\r\n    /**\r\n     * Build up the response object\r\n     *\r\n     * @param source\r\n     * @param path\r\n     * @param content\r\n     * @returns {{source: *, path: *, content: *}}\r\n     */\r\n    buildResponse(source, path, content) {\r\n        return {\r\n            'source': source,\r\n            'path': path,\r\n            'content': content\r\n        }\r\n    }\r\n}\r\nexport let FileSystem = new ClassFileSystem();","var program = require('commander'),\r\n    q = require('q'),\r\n    fs = require('fs-plus');\r\n\r\nimport {Input} from '../../edd-io/index';\r\nimport {Manager} from '../components/manager';\r\n\r\nclass ClassCommandInit {\r\n    init() {\r\n        program\r\n            .command('init')\r\n            .description('Initialize a new edd instance')\r\n            .option('-f, --force', 'Force re-initialization if already existing')\r\n            .action(this.handle);\r\n    }\r\n\r\n    handle() {\r\n        var overwrite = program.force;\r\n        if (fs.existsSync(Manager.eddiePath)) {\r\n            overwrite = Input.confirm('edd is already initialized, do you want to re-initialize it', false);\r\n            q.resolve(overwrite).then(function (force) {\r\n                if (force) {\r\n                    Manager.init(force);\r\n                }\r\n            });\r\n        } else {\r\n            Manager.init();\r\n        }\r\n    }\r\n}\r\n\r\nexport let CommandInit = new ClassCommandInit();","var q = require('q');\r\nvar fs = require('fs-plus');\r\n\r\nimport {FileSystem} from './filesystem';\r\n\r\nclass ClassCopier {\r\n    /**\r\n     * Checks if a local version of the file exists and returns the file's contents\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    checkLocalVersion(path) {\r\n        let deferred = q.defer();\r\n\r\n        FileSystem.readLocalFile(path).then((fileContent) => {\r\n            return deferred.resolve(FileSystem.buildResponse('local', path, fileContent))\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetch a global version of the file being seeked\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    fetchGlobalVersion(path) {\r\n        let deferred = q.defer();\r\n\r\n        file.readGlobalFile(path).then((fileContent) => {\r\n            return deferred.resolve(fileContent);\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Creates a local version of the file\r\n     *\r\n     * @param path\r\n     * @param content\r\n     * @returns {*}\r\n     */\r\n    createLocalVersion(path, content) {\r\n        let deferred = q.defer();\r\n\r\n        file.writeToLocalFile(path, content).then(() => {\r\n            return deferred.resolve(file.buildResponse('local', path, content));\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Loads the file in the specified path from the closest .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {Promise}\r\n     */\r\n    copyFile(path) {\r\n        let deferred = q.defer();\r\n\r\n        if (!file.localDirectoryExists()) {\r\n            return deferred.reject(new Error('Local .edd folder does not exist.'));\r\n        }\r\n\r\n        this.checkLocalVersion(path).then((response) => {\r\n            return deferred.resolve(response);\r\n        }, (err) => {\r\n            this.fetchGlobalVersion(path).then((content) => {\r\n                this.createLocalVersion(path, content).then((response) => {\r\n                    return deferred.resolve(response);\r\n                }, (err) => {\r\n                    return deferred.reject(err);\r\n                })\r\n            }, (err) => {\r\n                return deferred.reject(err);\r\n            });\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n}\r\nexport  let Copier = new ClassCopier();","var program = require('commander');\r\n\r\nimport {Copier} from '../components/copy';\r\nimport {Loader} from '../components/loader';\r\n\r\nclass ClassCommandRead {\r\n    init() {\r\n        program\r\n            .command('read')\r\n            .description('Reads a json or yaml file and dumps its contents on the console')\r\n            .arguments('<path>', \"The path of the file to read\")\r\n            .action(this.handle)\r\n            .parse(process.argv);\r\n    }\r\n\r\n    handle(path) {\r\n        //\r\n        // if (path == undefined) {\r\n        //   throw new Error('Required argument `path` not provided');\r\n        // }\r\n        //\r\n        // if (!fs.isFileSync(path)) {\r\n        //   console.error('ERROR: Argument `path` is not a valid file path');\r\n        //   process.exit(1);\r\n        // }\r\n        //\r\n        console.log(path);\r\n        Loader.loadFile(path).then(function (response) {\r\n            console.log(response);\r\n        }, function (err) {\r\n            console.log(err);\r\n        });\r\n        // Copier.copyFile(path).then(function (response) {\r\n        //   console.log(response);\r\n        // }, function (err) {\r\n        //   console.log(err)\r\n        // });\r\n    }\r\n}\r\n\r\nexport let CommandRead = new ClassCommandRead();","var program = require('commander'),\r\n    q = require('q'),\r\n    fs = require('fs-plus');\r\n\r\nimport {Writer} from '../components/writer';\r\n\r\nclass ClassCommandWrite {\r\n    init() {\r\n        program\r\n            .command('write')\r\n            .description('Writes data to a specified file')\r\n            .arguments('<path> <data>', \"The path of the file to write\", \"Data to write\")\r\n            .action(this.handle)\r\n            .parse(process.argv);\r\n    }\r\n\r\n    handle(path, content) {\r\n        if (path == undefined) {\r\n            throw new Error('Required argument `path` not provided');\r\n        }\r\n\r\n        if (content == undefined) {\r\n            throw new Error('Required argument `data` not provided');\r\n        }\r\n\r\n        Writer.write(path, content)\r\n            .then(function () {\r\n                console.log('Files written successfully');\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err ? err : '');\r\n            });\r\n    }\r\n}\r\nexport let CommandWrite = new ClassCommandWrite();\r\n\r\n\r\n","var q = require('q'),\r\n  exec = require('exec'),\r\n  path = require('path'),\r\n  _ = require('lodash'),\r\n  fs = require('fs-plus'),\r\n  ghdownload = require('github-download');\r\n\r\nimport {Input, Output} from '../../edd-io/index';\r\nimport {FileSystem, Manager} from '../../edd-fs/index';\r\n\r\nclass ClassInstaller {\r\n  /**\r\n   * Install the libraries from github\r\n   *\r\n   * @param library\r\n   * @returns {Promise}\r\n   */\r\n  installLibrary(library, version, skip) {\r\n    let credentials, spinner, localFolder;\r\n\r\n    localFolder = FileSystem.getLocalFolder();\r\n\r\n    if (!localFolder) {\r\n      return Input.confirm('I\\'m not initialized in this project. Would you like to initialize now?').then((init)=> {\r\n        if (!init) {\r\n          return q.reject('You should first initialize edd for this project. Run edd init in the project base folder');\r\n        }\r\n        Manager.init().then(()=> {\r\n          Output.success('Initialization complete, now lets install the library');\r\n          this.installLibrary(library, version, skip);\r\n        })\r\n\r\n      });\r\n    }\r\n\r\n    credentials = Installer.getLibraryCredentials(library, version);\r\n\r\n\r\n    spinner = Output.spinner('Installing library ' + credentials.user + '/' + credentials.repo);\r\n    return this.download(credentials, localFolder + '/libraries/' + credentials.repo + '/' + credentials.branch).then((src) => {\r\n      return FileSystem.readFile(src + '/edd-config.json').then((config)=> {\r\n        spinner.stop();\r\n        if (credentials.repo != config.slug) {\r\n          config = this.moveToSlug(src, localFolder + '/libraries/' + config.slug + '/' + credentials.branch, config);\r\n        }\r\n        return this.installLibraryDependecies(config);\r\n      });\r\n    }).finally(() => {\r\n      spinner.stop();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  installLibraryDependecies(config) {\r\n    return q.resolve(config).then((config)=> {\r\n      let dependencies = [];\r\n      if (config.dependencies) {\r\n        Output.info('Installing dependencies for ' + config.slug)\r\n        dependencies = _.map(config.dependencies, (version, library)=> {\r\n          this.installLibrary(library, version, true);\r\n        })\r\n      }\r\n\r\n      return q.all(dependencies).then(()=> {\r\n        Output.success('Library ' + config.slug + ' successfully added.');\r\n        return config;\r\n      });\r\n    });\r\n  }\r\n\r\n  moveToSlug(src, dest, config) {\r\n    if (path.basename(src) == config.slug) {\r\n      return q.resolve(config);\r\n    }\r\n\r\n    if (fs.existsSync(dest)) {\r\n      return Input.choice('Library with identifier ' + config.slug + ' already exists. What do we do?', ['overwrite', 'skip', 'rename']).then((choice)=> {\r\n        if (choice == 'skip') {\r\n          fs.removeSync(src);\r\n          return config;\r\n        }\r\n        if (choice == 'overwrite') {\r\n          return this.overwriteExisting(src, config)\r\n        }\r\n        if (choice == 'rename') {\r\n          return Input.ask('What should I rename the file to:', path.basename(src)).then((slug) => {\r\n            config.slug = slug;\r\n            return this.moveToSlug(src, config);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let deferred = q.defer();\r\n    if (!fs.existsSync(path.dirname(dest))) {\r\n      fs.makeTreeSync(path.dirname(dest));\r\n    }\r\n    fs.rename(src, dest, (error)=> {\r\n      if (error) {\r\n        return deferred.reject(error)\r\n      }\r\n      fs.removeSync(path.dirname(src));\r\n      return deferred.fulfill(config);\r\n    });\r\n    return deferred.promise;\r\n\r\n  }\r\n\r\n  overwriteExisting(src, config) {\r\n    let dest = path.dirname(src) + config.slug;\r\n\r\n    if (fs.existsSync(dest)) {\r\n      let result = fs.removeSync(dest);\r\n      if (result) {\r\n        return q.reject(result);\r\n      }\r\n    }\r\n    return this.moveToSlug(src, config);\r\n  }\r\n\r\n  /**\r\n   * Install a plugin from github\r\n   *\r\n   * @param plugin\r\n   * @returns {*}\r\n   */\r\n  installPlugin(plugin) {\r\n    var spinner = new Spinner('Installing plugin.. %s');\r\n    spinner.setSpinnerString('|/-\\\\');\r\n    let localFolder = Installer.localFolderExist();\r\n    // check if the user has a local .edd folder for the project\r\n    if (localFolder) {\r\n      // fetch the library credentials passed by the user\r\n      let credentials = Installer.getPluginCredentials(plugin);\r\n      //Start the library installer loader\r\n      spinner.start();\r\n      // download the library to the libraries folder in the local .edd folder\r\n      return this.download(credentials, localFolder + '/plugins/').then(() => {\r\n        return defered.resolve('\\nPlugin successfully installed');\r\n      }).finally(() => {\r\n        spinner.stop();\r\n      });\r\n    }\r\n\r\n    return q.reject(new Error('You should initialize edd for this project first by running ' + chalk.white('edd init')));\r\n  }\r\n\r\n\r\n  /**\r\n   * Parse the library credentials\r\n   *\r\n   * @param library\r\n   * @returns {{user: *, repo: *}}\r\n   */\r\n  static getLibraryCredentials(library, version) {\r\n    let credentials = library.split(\"/\");\r\n\r\n    return {\r\n      user: credentials[0],\r\n      repo: credentials[1],\r\n      branch: version ? version : 'master'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse the plugin credentials\r\n   *\r\n   * @param plugin\r\n   * @returns {{user: *, repo: *, branch: *}}\r\n   */\r\n  static getPluginCredentials(plugin) {\r\n    let credentials = plugin.split(\"/\");\r\n\r\n    return {\r\n      user: credentials[0],\r\n      repo: credentials[1],\r\n      branch: credentials[2]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Download library from github and move to the specified destination\r\n   *\r\n   * @param credentials\r\n   * @param destination\r\n   */\r\n  download(credentials, destination) {\r\n    let defered;\r\n\r\n    defered = q.defer();\r\n    //Check if the library already exists\r\n    if (fs.existsSync(destination)) {\r\n      return q.reject('Library ' + credentials.user + '/' + credentials.repo + ' : ' + credentials.master + ' already exists');\r\n    }\r\n    if (!fs.existsSync(destination + '/../')) {\r\n      fs.makeTree(destination + '/../');\r\n    }\r\n\r\n    ghdownload({user: credentials.user, repo: credentials.repo, ref: credentials.branch}, destination)\r\n      .on('error', (err)=> {\r\n        return defered.reject(err);\r\n      })\r\n      .on('end', ()=> {\r\n        return defered.fulfill(destination)\r\n      });\r\n\r\n    return defered.promise;\r\n  }\r\n}\r\n\r\nexport let Installer = new ClassInstaller();\r\n","var program = require('commander');\r\nimport {Installer} from '../components/install';\r\n\r\nclass Install {\r\n    /**\r\n     * Initialize the install commands for:\r\n     * 1. Library\r\n     * 2. Plugin\r\n     */\r\n    init(){\r\n        // Installing edd library\r\n        program\r\n            .command('library:install')\r\n            .description(\"Installs edd's libraries from github.com\")\r\n            .arguments('<library>', \"The library you want to install to edd e.g. username/repo_name\")\r\n            .arguments('[version]', \"The version you want [default=master]\")\r\n            .action(this.handleLibraryInstallation)\r\n            .parse(process.argv);\r\n\r\n        // Installing edd plugins\r\n        program\r\n            .command('install:plugin')\r\n            .description(\"Installs edd's plugins from github.com\")\r\n            .arguments('<plugin>', \"The plugin you want to install to edd e.g. username/repo_name\")\r\n            .action(this.handlePluginInstallation)\r\n            .parse(process.argv);\r\n    }\r\n\r\n    /**\r\n     * Handles the installation of the libraries\r\n     *\r\n     * @param library\r\n     */\r\n    handleLibraryInstallation(library, version) {\r\n        Installer.installLibrary(library, version).then((response) => {\r\n            //console.log(response);\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the installation of the plugins\r\n     *\r\n     * @param plugin\r\n     */\r\n    handlePluginInstallation(plugin) {\r\n        Installer.installPlugin(plugin).then((response) => {\r\n            console.log(response);\r\n        }, (err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport let CommandInstall = new Install();","let _ = require('lodash'),\r\n  q = require('q'),\r\n  path = require('path');\r\n\r\nimport {Loader} from '../../edd-fs/index';\r\nimport {Reader} from '../../edd-fs/index';\r\nimport {Input, Output} from '../../edd-io/index';\r\n\r\nclass ClassFileLoader {\r\n\r\n  findPattern(uses) {\r\n    uses = this.explode(uses);\r\n\r\n    if (!uses.library) {\r\n      uses.library = Input.ask('Library');\r\n    }\r\n    return q.resolve(uses.library).then((library)=> {\r\n      if (!uses.version) {\r\n        uses.version = Input.ask('Version')\r\n      }\r\n      return q.resolve(uses.version).then((version)=> {\r\n        if (!uses.pattern) {\r\n          uses.pattern = Input.ask('Pattern');\r\n        }\r\n        return q.resolve(uses.pattern).then((pattern)=> {\r\n          uses = library.concat(':', version, ':', pattern);\r\n          return this.getPattern(uses);\r\n        });\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  getPattern(uses) {\r\n    uses = this.explode(uses);\r\n\r\n    let pattern = {}, file;\r\n\r\n    return this.getLibrary(uses).then((library)=> {\r\n      pattern.library = library;\r\n      file = 'libraries/' + uses.library + '/' + uses.version + '/' + uses.pattern;\r\n      return Loader.loadFile(file).then((_pattern)=> {\r\n        pattern.pattern = _pattern.content;\r\n        pattern.pattern.scope = _pattern.type;\r\n        _.each(pattern.pattern.definitions, (value, key)=> {\r\n          if (_.startsWith(value, '!include')) {\r\n            pattern.pattern.definitions[key] = Reader.readSync(path.dirname(_pattern.path) + '/' + value.replace('!include','').trim())\r\n          }\r\n        });\r\n        return pattern;\r\n      }, function (err) {\r\n        Output.error('Pattern not found: ', path, err);\r\n      })\r\n    });\r\n  };\r\n\r\n  explode(uses) {\r\n    var result = {\r\n      library: undefined,\r\n      version: undefined,\r\n      pattern: undefined\r\n    };\r\n    if (uses) {\r\n      uses = uses.split(':');\r\n      result.library = uses.shift();\r\n      if (uses.length == 1) {\r\n        result.pattern = uses.shift();\r\n      } else {\r\n        result.version = uses.shift();\r\n        result.pattern = uses.shift();\r\n      }\r\n    }\r\n    if (!result.version) {\r\n      result.version = 'master'\r\n    }\r\n    return result;\r\n\r\n  };\r\n\r\n  getLibrary(uses) {\r\n    let path = 'libraries/' + uses.library + '/' + uses.version + '/edd-config.json';\r\n    return Loader.loadFile(path).then((library)=> {\r\n      library.content.scope = library.type;\r\n      return library.content;\r\n    }, ()=> {\r\n      Output.error('The ' + uses.library + '/' + uses.version + ' does not exist');\r\n    });\r\n\r\n  }\r\n}\r\nexport let FileLoader = new ClassFileLoader();","var\r\n  _ = require('lodash'),\r\n  q = require('q'),\r\n  nunjucks = require('nunjucks');\r\n\r\nimport {Fields, Output} from '../../edd-io/index';\r\nimport {Writer} from '../../edd-fs/index';\r\nimport {FileLoader} from './loader';\r\n\r\nclass ClassBuilder {\r\n  generate(uses) {\r\n    FileLoader.findPattern(uses).then((pattern)=> {\r\n      let variables = {};\r\n      if (pattern.pattern.variables.schema && pattern.pattern.variables.form) {\r\n        variables = Fields.queries(pattern.pattern.variables.schema, pattern.pattern.variables.form);\r\n      }\r\n      else if (pattern.pattern.variables) {\r\n        variables = Fields.queries({type: 'object', properties: pattern.pattern.variables}, '*');\r\n      }\r\n      q.resolve(variables).then((definitions)=> {\r\n        this.build(uses, definitions).then((files)=> {\r\n          _.each(files, (file)=> {\r\n            Writer.write(file.name, file.content).then(()=> {\r\n              Output.success('Successfully created ' + file.name);\r\n            });\r\n          })\r\n        }, (response)=> {\r\n          Output.error(response)\r\n        });\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  build(uses, definitions) {\r\n\r\n    let files = [], env, filters,\r\n      dynamicLoader = require('./loaders/dynamic-loader'),\r\n      deferred = q.defer();\r\n\r\n\r\n    env = new nunjucks.Environment(new dynamicLoader(), {preserve_linebreaks: true, autoescape: false});\r\n\r\n    filters = {\r\n      lodash: require('./filters/lodash-filters')\r\n    };\r\n\r\n    _.each(filters, (filter)=> {\r\n      env = filter.appendFilters(env);\r\n    });\r\n\r\n    env.render(uses, definitions, function (err, content) {\r\n      if (err) {\r\n        console.log(err);\r\n        return deferred.reject(err);\r\n      }\r\n      files.push({\r\n        name: content.substr(0, content.indexOf(\"\\n\")),\r\n        content: content.substr(content.indexOf(\"\\n\") + 1)\r\n      });\r\n\r\n      deferred.fulfill(files);\r\n    });\r\n    return deferred.promise;\r\n  };\r\n\r\n}\r\nexport let Builder = new ClassBuilder();","var program = require('commander');\r\n\r\nimport {Builder} from './../lib/builder';\r\n\r\nclass Generate {\r\n    init() {\r\n        program\r\n            .command('generate [uses]')\r\n            .alias('g')\r\n            .description('Generate files based on a library')\r\n            .action(this.handle);\r\n\r\n    }\r\n\r\n    handle(uses) {\r\n        Builder.generate(uses);\r\n    }\r\n}\r\nexport let CommandGenerate = new Generate();\r\n\r\n","var plugin = {};\r\nplugin.name = 'File Builder';\r\n\r\nimport {CommandInstall} from './commands/install';\r\nimport {CommandGenerate} from './commands/generate';\r\n// import { CommandLibraries} from './commands/libraries';\r\n\r\nexport function init() {\r\n    CommandInstall.init();\r\n    CommandGenerate.init();\r\n}"],"names":["inquirer","require","ClassInquirer","questions_array","index","answers","prompt","then","answer","assign","length","loopQuestions","Promise","resolve","Inquirer","_","ClassTransformers","field","key","title","isUndefined","default","log","question","transformers","transformDefaultField","enum","choices","map","item","value","name","type","Transformers","ClassFields","form","default_model","questions","getQuestions","schema","parent_field","array_form","array_schema","cloneDeep","get","forEach","items","item_field","isString","replace","push","getNormalField","schema_form","fields","object","field_schema","merge","getArrayFields","array_fields","isArray","capitalize","error","model","getAsteriskFields","askQuestions","Fields","ClassInput","message","_default","response","selected","Input","chalk","Spinner","ClassOutput","each","arguments","JSON","stringify","info","cyan","green","white","bgRed","warn","yellow","spinner","setSpinnerString","Output","q","path","fs","ClassWriter","file_path","content","defered","defer","dir","dirname","existsSync","makeTreeSync","isObject","writeFile","err","reject","Error","fulfill","promise","askToOverwrite","overwrite","deferred","makeTree","Writer","yaml","ClassReader","types","fileName","ext","extname","substr","findIndex","extensions","data","load","parse","resolveFileType","readFile","toString","readFileSync","has","Reader","ClassLoader","globalFolder","getHomeDirectory","getRealPath","read","isAbsolute","localFolder","getLocalFolder","localFilePath","fileExists","absolute","globalFilePath","possibleExtensions","i","targetFile","startingPoint","levels","split","Loader","ClassManager","basePath","process","cwd","eddiePath","concat","eddieFile","config","version","write","file","success","mkdir","all","Manager","ClassFileSystem","exists","FileSystem","fetchDirectoryLevels","Boolean","source","program","ClassCommandInit","command","description","option","action","handle","force","confirm","init","CommandInit","ClassCopier","readLocalFile","fileContent","buildResponse","readGlobalFile","writeToLocalFile","localDirectoryExists","checkLocalVersion","fetchGlobalVersion","createLocalVersion","Copier","ClassCommandRead","argv","loadFile","CommandRead","ClassCommandWrite","undefined","catch","CommandWrite","exec","ghdownload","ClassInstaller","library","skip","credentials","installLibrary","Installer","getLibraryCredentials","user","repo","download","branch","src","stop","slug","moveToSlug","installLibraryDependecies","finally","dependencies","dest","basename","choice","removeSync","overwriteExisting","ask","rename","result","plugin","localFolderExist","getPluginCredentials","start","destination","master","ref","on","Install","handleLibraryInstallation","handlePluginInstallation","installPlugin","CommandInstall","ClassFileLoader","uses","explode","pattern","getPattern","getLibrary","_pattern","scope","definitions","startsWith","readSync","trim","shift","FileLoader","nunjucks","ClassBuilder","findPattern","variables","queries","properties","build","files","env","filters","dynamicLoader","Environment","preserve_linebreaks","autoescape","filter","appendFilters","render","indexOf","Builder","Generate","alias","generate","CommandGenerate"],"mappings":"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"}